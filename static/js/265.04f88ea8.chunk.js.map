{"version":3,"file":"static/js/265.04f88ea8.chunk.js","mappings":"gOACA,GAAgB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,yB,SCG5EA,EAAU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC5BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,cAAGD,UAAWC,EAAAA,KAAd,SAAyBL,KACzB,cAAGI,UAAWC,EAAAA,OAAd,SAA2BJ,KAC3B,mBAAQK,KAAK,SAASF,UAAWC,EAAAA,OAAYE,QAN5B,kBAAML,GAASM,EAAAA,EAAAA,IAAcT,GAA7B,EAMjB,sBAKL,ECjBYU,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECHtC,EAAuB,0BCIVC,EAAc,WACzB,IAAMJ,GAAWK,EAAAA,EAAAA,IAAYH,GAE7B,OACE,eAAIT,UAAWC,EAAf,SACGM,EAASM,KAAI,gBAAGlB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,yBACE,SAACH,EAAD,CAASC,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,KAD9BF,EADG,KAOnB,E,UChBD,GAAgB,KAAO,4BAA4B,MAAQ,6BAA6B,OAAS,+B,UCKpFmB,EAAgB,WAC3B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOnB,EAAP,KAAaoB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAeoB,EAAf,KACMnB,GAAWC,EAAAA,EAAAA,MAyBXmB,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAEtB,OACE,kBAAMnB,UAAWC,EAAAA,KAAUoB,SA3BR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACT7B,EAAO4B,EAAKE,SAAS9B,KAAK+B,MAC1B9B,EAAS2B,EAAKE,SAAS7B,OAAO8B,MACpC,GAAa,KAAT/B,EAGF,OAFAE,GAAS8B,EAAAA,EAAAA,IAAWhC,EAAMC,SAC1B2B,EAAKK,QAGPC,MAAM,iDACP,EAgBC,WACE,kBAAO9B,UAAWC,EAAAA,MAAW8B,QAASb,EAAtC,mBAGE,kBACEvB,GAAIuB,EACJc,SApBiB,SAACC,GACxB,IAAMN,EAAQM,EAAMC,OAAOP,MAC3BX,EAAQW,EACT,EAkBOA,MAAO/B,EACPM,KAAK,OACLN,KAAK,OACLuC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,mBAAOrC,UAAWC,EAAAA,MAAW8B,QAASX,EAAtC,UACG,IADH,SAES,QAET,kBACEzB,GAAIyB,EACJY,SA9BmB,SAACC,GAC1B,IAAMN,EAAQM,EAAMC,OAAOP,MAC3BV,EAAUU,EACX,EA4BOA,MAAO9B,EACPK,KAAK,MACLN,KAAK,SACLuC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEZ,mBAAQnC,KAAK,SAASF,UAAWC,EAAAA,OAAjC,2BAKL,EChEc,SAASqC,IACtB,IAAMxC,GAAWC,EAAAA,EAAAA,MACXwC,GAAY3B,EAAAA,EAAAA,IAAYP,GAM9B,OAJAmC,EAAAA,EAAAA,YAAU,WACR1C,GAAS2C,EAAAA,EAAAA,MACV,GAAE,CAAC3C,KAGF,iCACE,SAAC4C,EAAA,EAAD,WACE,gDAEF,SAAC5B,EAAD,KACA,yBAAMyB,GAAa,4BACnB,SAAC5B,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"name\":\"Contact_name__xbxVU\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.name}>{name}</p>\n      <p className={css.number}>{number}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Contact id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactEditor.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (name !== '') {\n      dispatch(addContact(name, number));\n      form.reset();\n      return;\n    }\n    alert('Contact name cannot be empty. Enter some text!');\n  };\n\n  const handleChangeName = (event) => {\n    const value = event.target.value;\n    setName(value);\n  };\n\n  const handleChangeNumber = (event) => {\n    const value = event.target.value;\n    setNumber(value);\n  };\n\n  const loginNameId = nanoid();\n  const loginNumberId = nanoid();\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor={loginNameId}>\n          Name\n        </label>\n        <input\n          id={loginNameId}\n          onChange={handleChangeName}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.label} htmlFor={loginNumberId}>\n          {' '}\n          Number{' '}\n        </label>\n        <input\n          id={loginNumberId}\n          onChange={handleChangeNumber}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["Contact","id","name","number","dispatch","useDispatch","className","css","type","onClick","deleteContact","selectLoading","state","contacts","loading","selectAllContacts","items","ContactList","useSelector","map","ContactEditor","useState","setName","setNumber","loginNameId","nanoid","loginNumberId","onSubmit","e","preventDefault","form","currentTarget","elements","value","addContact","reset","alert","htmlFor","onChange","event","target","pattern","title","required","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}